### ==================== Books API Test File ====================
### Use this file with REST Client VS Code extension
### Or copy-paste into Postman/Thunder Client

@baseUrl = http://localhost:3000
@contentType = application/json

### ==================== Welcome Route ====================

### Get API Info
GET {{baseUrl}}/

### ==================== Get All Books ====================

### Get all books
GET {{baseUrl}}/api/books

### ==================== Get Single Book ====================

### Get book with ID 1
GET {{baseUrl}}/api/books/1

### Get book with ID 2
GET {{baseUrl}}/api/books/2

### Get non-existent book (should return 404)
GET {{baseUrl}}/api/books/999

### ==================== Create New Book ====================

### Create a new book
POST {{baseUrl}}/api/books
Content-Type: {{contentType}}

{
  "title": "The Catcher in the Rye",
  "author": "J.D. Salinger",
  "year": 1951,
  "genre": "Classic"
}

### Create another book
POST {{baseUrl}}/api/books
Content-Type: {{contentType}}

{
  "title": "Harry Potter and the Philosopher's Stone",
  "author": "J.K. Rowling",
  "year": 1997,
  "genre": "Fantasy"
}

### Create book with missing fields (should return 400)
POST {{baseUrl}}/api/books
Content-Type: {{contentType}}

{
  "title": "Incomplete Book"
}

### ==================== Update Book ====================

### Update book with ID 1
PUT {{baseUrl}}/api/books/1
Content-Type: {{contentType}}

{
  "title": "The Great Gatsby (Updated)",
  "author": "F. Scott Fitzgerald",
  "year": 1925,
  "genre": "Classic Fiction"
}

### Partial update (only title)
PUT {{baseUrl}}/api/books/2
Content-Type: {{contentType}}

{
  "title": "To Kill a Mockingbird (Revised Edition)"
}

### Update non-existent book (should return 404)
PUT {{baseUrl}}/api/books/999
Content-Type: {{contentType}}

{
  "title": "This Won't Work"
}

### ==================== Delete Book ====================

### Delete book with ID 3
DELETE {{baseUrl}}/api/books/3

### Delete non-existent book (should return 404)
DELETE {{baseUrl}}/api/books/999

### ==================== Error Cases ====================

### Test 404 - Non-existent route
GET {{baseUrl}}/api/nonexistent

### ==================== After Tests ====================

### Verify all books after operations
GET {{baseUrl}}/api/books
